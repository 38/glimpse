cmake_minimum_required(VERSION 2.6)
SET(CMAKE_USE_RELATIVE_PATHS ON)
project(glimpse)

set(CFLAGS -g)
set(LDFLAGS \ )
#include directories
include_directories("include")
include_directories(".")

#build
aux_source_directory(src/ glimpse_FILES)
set_source_files_properties(${glimpse_FILES} PROPERTIES COMPILE_FLAGS ${CFLAGS} )
add_library(glimpse ${glimpse_FILES})

#api
macro(add_api prefix apiname outdir)
	set(api_FILES )	
	aux_source_directory(${prefix}/${apiname} api_FILES)
	set_source_files_properties(${api_FILES} PROPERTIES COMPILE_FLAGS ${CFLAGS}\ -I${prefix}/${apiname}/include)
	add_library(${apiname} ${api_FILES})
endmacro(add_api)

macro(add_plugin prefix plugin apidir outdir)
	set(plugin_FILES )
	aux_source_directory(${prefix}/${plugin} plugin_FILES)
	set_source_files_properties(${plugin_FILES} PROPERTIES COMPILE_FLAGS ${CFLAGS}\ -I${apidir}/include\ -I${prefix}/include)
	add_library(${plugin} SHARED ${plugin_FILES})
	set_target_properties(${plugin} PROPERTIES LINK_FLAGS ${LDFLAGS}\ -fPIC)
	set_target_properties(${plugin} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${outdir})
endmacro(add_plugin)

#test
macro(add_utest testname)
	set(__sources__ test/${testname}.c)
	set_source_files_properties(${__sources__} PROPERTIES COMPILE_FLAGS ${CFLAGS})
	add_executable(test/test_${testname} ${__sources__})
	target_link_libraries(test/test_${testname} glimpse)
	set_target_properties(test/test_${testname} PROPERTIES LINK_FLAGS ${LDFLAGS})
endmacro(add_utest)

macro(add_utest_with_api testname api apidir)
	set(__sources__ test/${testname}.c)
	set_source_files_properties(${__sources__} PROPERTIES COMPILE_FLAGS ${CFLAGS}\ -I${apidir}/include)
	add_executable(test/test_${testname} ${__sources__})
	target_link_libraries(test/test_${testname} ${api})
	target_link_libraries(test/test_${testname} glimpse)
	target_link_libraries(test/test_${testname} dl)
	set_target_properties(test/test_${testname} PROPERTIES LINK_FLAGS ${LDFLAGS})
endmacro(add_utest_with_api)

add_plugin(test/plugin testapi_plugin test/api/testapi test)
add_utest(log)
add_api(test/api testapi test)
add_utest_with_api(api testapi test/api/testapi test)
add_utest_with_api(plugin testapi test/api/testapi test)
add_plugin(test/plugin deptest_A test/api/testapi test)
add_plugin(test/plugin deptest_B test/api/testapi test)
add_plugin(test/plugin deptest_C test/api/testapi test)
add_plugin(test/plugin loopdep_A test/api/testapi test)
add_plugin(test/plugin loopdep_B test/api/testapi test)
add_plugin(test/plugin baddep_A test/api/testapi test)
add_plugin(test/plugin baddep_B test/api/testapi test)
add_utest_with_api(plugindep testapi test/api/testapi) 
add_api(api TypeAPI .)
add_plugin(plugin integer api/TypeAPI .)
add_utest_with_api(integer TypeAPI api/TypeAPI)
